{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "String",
            "metadata": {
                "description": "Admin username"
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "Admin password"
            }
        },
        "vmNamePrefix": {
            "type": "String",
            "metadata": {
                "description": "Prefix to use for VM names"
            }
        },
        "vmSize": {
            "defaultValue": "Standard_DS2_V2",
            "type": "String",
            "metadata": {
                "description": "Size of the VM"
            }
        },
        "storageAccountType": {
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ],
            "type": "String",
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "subnetName": {
            "defaultValue": "default",
            "type": "String",
            "metadata": {
                "description": "Name of the subnet"
            }
        },
        "virtualNetworkNewOrExisting": {
            "defaultValue": "existing",
            "type": "String",
            "metadata": {
                "description": "Determines whether or not a new virtual network should be provisioned."
            }
        },
        "virtualNetworkResourceGroup": {
            "type": "String",
            "metadata": {
                "description": "Resource group for existing VNET"
            }
        },
        "networkSecurityGroupName": {
            "type": "String",
            "metadata": {
                "description": "Name of network security group per app tier. Eg: EPRS-APP-NSG"
            }
        },
        "numberOfInstances": {
            "defaultValue": 1,
            "type": "Int",
            "metadata": {
                "description": "Number of VMs to be created"
            }
        },
        "virtualNetworkName": {
            "type": "String",
            "metadata": {
                "description": "Name of VNET"
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "osType": {
            "defaultValue": "Windows",
            "allowedValues": [
                "Windows",
                "Linux"
            ],
            "type": "String",
            "metadata": {
                "description": "Operation System for the Virtual Machine."
            }
        }
    },
    "variables": {
        "storageAccountType": "Standard_LRS",
        "addressPrefix": "",
        "storageAccountName": "[concat('new', uniqueString(resourceGroup().name), 'storg')]",
        "subnetRef": "[resourceId(parameters('virtualNetworkResourceGroup'),'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
        "windowsImage": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
        },
        "linuxImage": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04.0-LTS",
            "version": "latest"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "[variables('storageAccountType')]"
            },
            "kind": "Storage",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2018-02-01",
            "location": "[parameters('location')]"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "apiVersion": "2017-09-01",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[variables('addressPrefix')]"
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {}
                    }
                ]
            },
            "condition": "[equals(parameters('virtualNetworkNewOrExisting'), 'new')]"
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmNamePrefix'), copyindex(), '-nic')]",
            "apiVersion": "2018-04-01",
            "location": "[parameters('location')]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[parameters('virtualNetworkName')]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmNamePrefix'), copyindex())]",
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": "[if(equals(parameters('osType'), 'Windows'), variables('windowsImage'), variables('linuxImage'))]",
                    "osDisk": {
                        "createOption": "FromImage",
                        "name": "[concat(parameters('vmNamePrefix'), copyIndex(),'-os')]",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "[parameters('storageAccountType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), copyindex(), '-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('storageAccountName')).primaryEndpoints.blob]"
                    }
                }
            },
            "dependsOn": [
                "[variables('storageAccountName')]",
                "nicLoop"
            ]
        }
    ]
}
